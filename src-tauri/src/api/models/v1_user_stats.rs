/*
 * api/v1/activity_service.proto
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 * Generated by: https://openapi-generator.tech
 */

use super::super::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1UserStats {
    /// The name of the user.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The timestamps when the memos were displayed. We should return raw data to the client, and let the client format the data with the user's timezone.
    #[serde(rename = "memoDisplayTimestamps", skip_serializing_if = "Option::is_none")]
    pub memo_display_timestamps: Option<Vec<String>>,
    #[serde(rename = "memoTypeStats", skip_serializing_if = "Option::is_none")]
    pub memo_type_stats: Option<Box<models::UserStatsMemoTypeStats>>,
    #[serde(rename = "tagCount", skip_serializing_if = "Option::is_none")]
    pub tag_count: Option<std::collections::HashMap<String, i32>>,
    /// The pinned memos of the user.
    #[serde(rename = "pinnedMemos", skip_serializing_if = "Option::is_none")]
    pub pinned_memos: Option<Vec<String>>,
    #[serde(rename = "totalMemoCount", skip_serializing_if = "Option::is_none")]
    pub total_memo_count: Option<i32>,
}

impl V1UserStats {
    pub fn new() -> V1UserStats {
        V1UserStats {
            name: None,
            memo_display_timestamps: None,
            memo_type_stats: None,
            tag_count: None,
            pinned_memos: None,
            total_memo_count: None,
        }
    }
}

